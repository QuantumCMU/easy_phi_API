# This file contains templates for HTML generated from list of supported SCPI
# commands. all sections
#
# Widgets are chunks of javascript. You can account for these objects in scope:
# jQuery, $ - jQuery library and its functions. If your template uses jQueryUI
#           you might use it's functions too, but only jQuery is guaranteed
#           for all templates
# scpi - method to send SCPI command to the module. Accepted parameters:
#           scpi(scpi_command, callback), where scpi_command is string literal,
#           and callback is function that will be called with response as the
#           only parameter
# slot - rack slot id where command will be sent. It is a good idea to include
#           it into DOM element ids to ensure uniqueness
#
# container - jqery *object* to put widget into.
#
# Example configuration for SYSTem:NAME? command:
# # you can use arbitrary names for section, just make it descriptive. Spaces
# # are also allowed. There is no UPPER/lowercase convention
# [System name]
# scpi = SYSTem:NAME?
# widget = var container = $(container);
#     container.append("<input type='button' id='system_name_"+slot+"' value='Ask me!'>");
#     $("#system_name_"+slot).click(function(){
#         scpi("SYST:NAME?", function(scpi_response){
#             alert("System name: "+ scpi_response);
#         });
#     });

[DEFAULT]
# Default widget for unsupported command. Usually just a text label, input and
# 'Send' button
default_widget = container.append(
    "<input type='text' name='module_scpi_cmd_"+slot+"' id='module_scpi_cmd_"+slot+"'>"+
    "<input type='button' value='Send SCPI' id='module_scpi_submit_"+slot+"'>");

    $("#module_scpi_submit_" + slot).click(function(){
        scpi($("#module_scpi_cmd_"+slot).val());
    });


[Logic gate output port1]
scpi =  CONFigure:OUT1 (OR|AND|IN1|IN2)
        CONFigure:OUT1?
widget = container.append(
    "Output 1 signal: " + "<input type='button' value='GET' id='lgate_out1_get_"+slot+"' />" +
    "<select id='lgate_out1_"+slot+"'>"+
        "<option></option>" +
        "<option value='OR'>OR</option>" +
        "<option value='AND'>AND</option>" +
        "<option value='IN1'>IN1</option>" +
        "<option value='IN2'>IN2</option>" +
    "</select>" +
    "<input type='button' value='SET' id='lgate_out1_set_"+slot+"' />"
     );
    $('#lgate_out1_get_'+slot).click(function(){
         scpi('CONF:OUT1?',
            function(scpi_response){
                $('#lgate_out1_'+slot).val(scpi_response);
            }
         )
    })
    $('#lgate_out1_set_'+slot).click(function(){
         var val = $('#lgate_out1_'+slot).val();
         if (val) scpi('CONF:OUT1 ' + val);
    })

[Logic gate output port2]
scpi =  CONFigure:OUT2 (OR|AND|IN1|IN2)
        CONFigure:OUT2?
widget = container.append(
    "Output 2 signal: " + "<input type='button' value='GET' id='lgate_out2_get_"+slot+"' />" +
    "<select id='lgate_out2_"+slot+"'>"+
        "<option></option>" +
        "<option value='OR'>OR</option>" +
        "<option value='AND'>AND</option>" +
        "<option value='IN1'>IN1</option>" +
        "<option value='IN2'>IN2</option>" +
    "</select>" +
    "<input type='button' value='SET' id='lgate_out2_set_"+slot+"' />"
     );
    $('#lgate_out2_get_'+slot).click(function(){
         scpi('CONF:OUT2?',
            function(scpi_response){
                $('#lgate_out2_'+slot).val(scpi_response);
            }
         )
    })
    $('#lgate_out2_set_'+slot).click(function(){
         var val = $('#lgate_out2_'+slot).val();
         if (val) scpi('CONF:OUT2 ' + val);
    })

[Logic gate output port3]
scpi =  CONFigure:OUT3 (OR|AND|IN1|IN2)
        CONFigure:OUT3?
widget = container.append(
    "Output 3 signal: " + "<input type='button' value='GET' id='lgate_out3_get_"+slot+"' />" +
    "<select id='lgate_out3_"+slot+"'>"+
        "<option></option>" +
        "<option value='OR'>OR</option>" +
        "<option value='AND'>AND</option>" +
        "<option value='IN1'>IN1</option>" +
        "<option value='IN2'>IN2</option>" +
    "</select>" +
    "<input type='button' value='SET' id='lgate_out3_set_"+slot+"' />"
     );
    $('#lgate_out3_get_'+slot).click(function(){
         scpi('CONF:OUT3?',
            function(scpi_response){
                $('#lgate_out3_'+slot).val(scpi_response);
            }
         )
    })
    $('#lgate_out3_set_'+slot).click(function(){
         var val = $('#lgate_out3_'+slot).val();
         if (val) scpi('CONF:OUT3 ' + val);
    })

[Logic gate output port4]
scpi =  CONFigure:OUT4 (OR|AND|IN1|IN2)
        CONFigure:OUT4?
widget = container.append(
    "Output 4 signal: " + "<input type='button' value='GET' id='lgate_out4_get_"+slot+"' />" +
    "<select id='lgate_out4_"+slot+"'>"+
        "<option></option>" +
        "<option value='OR'>OR</option>" +
        "<option value='AND'>AND</option>" +
        "<option value='IN1'>IN1</option>" +
        "<option value='IN2'>IN2</option>" +
    "</select>" +
    "<input type='button' value='SET' id='lgate_out4_set_"+slot+"' />"
     );
    $('#lgate_out4_get_'+slot).click(function(){
         scpi('CONF:OUT4?',
            function(scpi_response){
                $('#lgate_out4_'+slot).val(scpi_response);
            }
         )
    })
    $('#lgate_out4_set_'+slot).click(function(){
         var val = $('#lgate_out4_'+slot).val();
         if (val) scpi('CONF:OUT4 ' + val);
    })


[Common Reset]
scpi = *RST
widget = container.append("<input type='button' id='reset_"+slot+"' value='RESET' />");
    $("#reset_"+slot).click(function(){scpi("*RST")});

# IGNORE LIST

[Identification]
scpi = *IDN?
widget =

[System name]
scpi = SYSTem:NAME?
widget =

[System error]
scpi =  SYSTem:ERRor?
        SYSTem:ERRor:NEXT?
        SYSTem:ERRor:COUNt?
widget =

[System version]
scpi =  SYSTem:VERSion?
widget =

[Wait till execution end]
scpi =  *WAI
widget =

[Operation compete]
scpi = *OPC
       *OPC?
widget =

[Clear status]
scpi = *CLS
widget =

[Event status]
scpi = *ESE
       *ESE?
       *ESR?
widget =

[Service request]
scpi = *SRE
       *SRE?
widget =

[Read status byte]
scpi = *STB?
widget =

[Self test]
scpi = *TST?
widget =
