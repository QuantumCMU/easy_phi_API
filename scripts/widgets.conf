# This file contains templates for HTML generated from list of supported SCPI
# commands. all sections
#
# Widgets are chunks of javascript, executed in global context. In global scope,
# you can account for these objects:
# jQuery, $ - jQuery library and its functions. If your template uses jQueryUI
#           you might use it's functions too, but jQuery is mandatory for all
#           templates
# scpi - method to send SCPI command to the module. Accepted parameters:
#           (scpi_command, callback) -
#
# slot - rack slot id to be sent. It is mandatory argument for `ep.scpi`
#           call. It is also a good idea to include it into DOM element ids to
#           ensure uniqueness
# container - jqery selector for container DOM object. It is a good idea to
#           cache this selector by starting every widget with line:
#           var container = $("{container}");
#
# Example configuration for SYSTem:NAME? command:
# # you can use arbitrary names for section, just make it descriptive. Spaces
# # are also allowed. There is no UPPER/lowercase convention
# [System name]
# scpi = SYSTem:NAME?
# widget = var container = $(container);
#     container.append("<input type='button' id='system_name_"+slot+"' value='Ask me!'>");
#     $("#system_name_"+slot).click(function(){
#         scpi("SYST:NAME?", function(scpi_response){
#             alert("System name: "+ scpi_response);
#         });
#     });

[DEFAULT]
# Default widget for unsupported command. Usually just a text label, input and
# 'Send' button

[Common Reset]
scpi = *RST
# TODO: test this widget
widget = var container = $(container);
    container.append("<input type='button' id='reset_"+slot+"' value='RESET' />");
    $("#reset_"+slot).click(function(){
         scpi("*RST", function(rst_response){
            alert("Module "+slot+" was reset");
         });
    });


[Logic gate output port1]
scpi =  CONFigure:OUT1 (OR|AND|IN1|IN2)
        CONFigure:OUT1?
widget = var container = $(container);
