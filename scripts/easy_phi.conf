# this is a tornado.options file
# basically, it means it uses Python syntax for configuration variables

# ========================================================
# PLATFORM INFO
# ========================================================
# vendor name. Change to your organization
vendor = 'Easy Phi'

# hardware version, e.g.: '1.2.45a'
# Default: 'N/A'
hw_version = 'N/A'

# welcome message. It will be passed in platform info parameters and intended
# to display greeting to the user when web interface is opened. What you might
# consider to put here:
# - login instructions (e.g. Use your LDAP account to login)
# - caution message
# - contacts of technician for help
# This message can be multiline and include HTML
welcome_message = "Welcome to Easy Phi test measurement equipment platform web interface"

# ========================================================
# SOFTWARE OPTIONS
# ========================================================
# server port to listen for web requests
# Default: 8000
server_port = 8000

# default data format returned by API.
# Default: json
default_format = 'json'


# ========================================================
# HARDWARE PORTS SETUP
# ========================================================
# ID_PATH property of devices to map equipment to rack slots example:
# ports = ['pci-0000:00:14.0-usb-0:1:1.0', 'pci-0000:00:14.0-usb-0:2:1.0']
# Default: []
ports = ['pci-0000:00:14.0-usb-0:1:1.0', 'pci-0000:00:14.0-usb-0:2:1.0']

# USB CDC serial port baud rate
# Default: 3000000
3000000

# serial port timeout in seconds
# Default: 2
2


# ========================================================
# PATHS CONFIGURATION
# ========================================================
# Path to interface template files. Templates is a set of .html files that
# define logical layout of web interface.
# If you would like to create custom theme, or upload existing one it has to
# be a separate writable folder in a safe location instead of default install
# path somewhere in /usr
# template_path =

# Path to static files. Similar to template path, but here we store javascript
# and css files (i.e. things that define how web interface actually looks,
# including sizes, colors, shapes etc.)
# static_path =

# Path to module configuration patches
# This file contains list scpi commands supported by modules which are not
# capable to report this list through SYSTem:HELP? request
# Default: '/etc/easy_phi/modules_conf_patches.conf'
# modules_conf_patches_path = '/etc/easy_phi/modules_conf_patches.conf'

# Path to widgets configuration file
# This file holds translation of scpi commands supported by device to
# web interface widgets. Default: '/etc/easy_phi/widdgets.conf'
# widgets_conf_path = '/etc/easy_phi/widdgets.conf'


# ========================================================
# SECURITY
# ========================================================
#

# This project supports configurable security backends. It means that you can
# switch between no authentication, password auth, Google or OpenID without
# having to change application code.
# security backends is a list of strings with path to Tornado handler to perform
# authentication
# Default value:  [
#    'easy_phi.auth.DummyLoginHandler',
#    'easy_phi.auth.PasswordAuthLoginHandler',
#    'easy_phi.auth.GoogleLoginHandler',
# ]
# security_backends = [ 'easy_phi.auth.DummyLoginHandler' ]

# Active security backend.
# Default: 'easy_phi.auth.DummyLoginHandler'
# security_backend = 'easy_phi.auth.DummyLoginHandler'

# Dummy is a security backend that silently authenticate users without asking
# password. All users assigned the same username, and empty api token.
# This backend also implies that module lock functionality won't work, as
# everything will be considered used by one user.

# While general security is configurable, we need admin authentication to stay
# unchanged. That is why administrator console always uses HTTP Basic auth
# Here you can configure login/password
# Default: 'easy-phi'/'easy-phi'
# admin_login = 'easy-phi'
# admin_pass = 'easy-phi'


# Security cookie also serves as api token. It is generated in a consistent
# manner from username and intrinsic platform information.
# Default cookie name. You don't need to change it unless you have a conflict
# with another API.
# Default: 'api_token'
# session_cookie_name = 'api_token'

# Time security cookie will be valid in DAYS
# Default: 30.
# session_cookie_ttl = 30

# Length of API token, up to 32 hex characters. Shorter lenght is more
# susceptible to brute force, longer values are less usable.
# Default: 16
# session_cookie_length = 16

# Secret value to be used for token generations. Having this value, one can
# generate api_tokens from user nams, so please keep it secrtet.
# By default it will be generated using intrinsic platform properties, such as
# hardware ids, filesystem uuids, and hostid. Write something here only if you
# are really confident about what you're doing
# You can generate reasonable value by running `md5pass` command
# secret =

# SECURITY BACKENDS SETTINGS
# --------------------------

# DummyLoginHandler will silently authorize all users with the this username
# Default: 'Anonymous'
# security_dummy_username = 'Anonymous'

# PasswordAuthLoginHandler stores passwords in plain text file in a special
# format. Format itself is describe in the default file coming with the system.
# Default: '/etc/easy_phi/passwords'
# security_passwords_file_path= '/etc/easy_phi/passwords'

# GoogleLoginHandler settings. This is your corporate domain to login into
# security_google_login_domain = 'google.com'
